<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <log4net>
    <root>
      <!-- 默认日志对象级别 -->
      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
      <level value="ALL" />
      <appender-ref ref="SysAppender" />
    </root>
    <logger name="WebLogger">
      <level value="DEBUG" />
    </logger>
    <!-- 
    AdoNetAppender：利用ADO.NET记录到数据库的日志。
    ConsoleAppender：将日志输出到控制台。
    RollingFileAppender：将日志以回滚文件（重复操作原始文件）的形式写到文件中。
    -->
    <!-- 控制台显示日志 -->
    <appender name="SysAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <!--日志文件路径,按文件大小方式输出时在这里指定文件名，并且前面的日志按天在文件名后自动添加当天日期形成文件-->
      <param name="File" value="C:\\YunZigServer\\Log\\" />
      <!--是否是向文件中追加日志-->
      <param name="AppendToFile" value="true" />
      <!--<param name="DatePattern" value="yyyy-MM-dd/"-ReflectionLayout.log=""""  />
      <param name="DatePattern" value="yyyyMMdd/yyyyMMdd"-TimerServer.log""  />
      <param name="DatePattern" value="yyyyMMdd/"TimerServer/TimerServer.log""  />-->
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date" />
      <!--按日期产生文件夹，文件名［在日期方式与混合方式下使用］日志文件名格式为:Logs_20181218.txt -->
      <param name="DatePattern" value="&quot;YunZig_&quot;yyyyMMdd&quot;.txt&quot;" />
      <param name="StaticLogFileName" value="false" />
      <layout type="log4net.Layout.PatternLayout,log4net">
        <!--
        %d, %date     ：表示当然的时间
　　    %p, %level    ：表示日志的级别
　　    %c, %logger   ：表示日志产生的主题或名称，通常是所在的类名，便于定位问题
　　    %m, %message  ：表示日志的具体内容
　　    %n, %newline  ：换行
        %exception    ：表示异常信息
        -->
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n" />
        <param name="Header" value=" ----------------------header--------------------------&#xD;&#xA;" />
        <param name="Footer" value=" ----------------------footer--------------------------&#xD;&#xA;" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!-- 控制输出日志的级别范围 -->
        <!--<param name="LevelMin" value="Info" />
        <param name="LevelMax" value="Warn" />-->
      </filter>
    </appender>
    <appender name="consoleApp" type="log4net.Appender.ConsoleAppender,log4net">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n" />
      </layout>
    </appender>
  </log4net>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <appSettings>
    <add key="RedisSysCustomKey" value="Lot" />
    <add key="RedisDataBaseIndex" value="0" />
    <add key="RedisHostConnection" value="47.95.247.135:6379,allowadmin=true" />
  </appSettings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    <provider invariantName="MySql.Data.MySqlClient" type="MySql.Data.MySqlClient.MySqlProviderServices, MySql.Data.Entity.EF6, Version=6.9.12.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d"></provider></providers>
  </entityFramework>
  <connectionStrings>
    <add name="HsfDBContext" connectionString="server=47.107.66.121;user id=root;password=root;database=hsf" providerName="MySql.Data.MySqlClient" />
  </connectionStrings>
<system.data>
    <DbProviderFactories>
      <remove invariant="MySql.Data.MySqlClient" />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.9.12.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    </DbProviderFactories>
  </system.data>
</configuration>